//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameEntity {

    public SpawnAssetWhenDestroyedComponent spawnAssetWhenDestroyed { get { return (SpawnAssetWhenDestroyedComponent)GetComponent(GameComponentsLookup.SpawnAssetWhenDestroyed); } }
    public bool hasSpawnAssetWhenDestroyed { get { return HasComponent(GameComponentsLookup.SpawnAssetWhenDestroyed); } }

    public void AddSpawnAssetWhenDestroyed(string newAsset) {
        var index = GameComponentsLookup.SpawnAssetWhenDestroyed;
        var component = CreateComponent<SpawnAssetWhenDestroyedComponent>(index);
        component.asset = newAsset;
        AddComponent(index, component);
    }

    public void ReplaceSpawnAssetWhenDestroyed(string newAsset) {
        var index = GameComponentsLookup.SpawnAssetWhenDestroyed;
        var component = CreateComponent<SpawnAssetWhenDestroyedComponent>(index);
        component.asset = newAsset;
        ReplaceComponent(index, component);
    }

    public void RemoveSpawnAssetWhenDestroyed() {
        RemoveComponent(GameComponentsLookup.SpawnAssetWhenDestroyed);
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class GameMatcher {

    static Entitas.IMatcher<GameEntity> _matcherSpawnAssetWhenDestroyed;

    public static Entitas.IMatcher<GameEntity> SpawnAssetWhenDestroyed {
        get {
            if (_matcherSpawnAssetWhenDestroyed == null) {
                var matcher = (Entitas.Matcher<GameEntity>)Entitas.Matcher<GameEntity>.AllOf(GameComponentsLookup.SpawnAssetWhenDestroyed);
                matcher.componentNames = GameComponentsLookup.componentNames;
                _matcherSpawnAssetWhenDestroyed = matcher;
            }

            return _matcherSpawnAssetWhenDestroyed;
        }
    }
}
